/ presentación
section#title
  h2 User identification with username and password in structured P2P networks
  p
    a[href="http://github.com/rfernand"] Rodrigo Fernández
    |  / 
    a[href="rfernand@csrg.inf.utfsm.cl"] rfernand@csrg.inf.utfsm.cl
  aside.notes 
    ul
      li Problema
        li Redes p2p solo identifican nodos-ip
        li Explicar redes estructuradas para ello
      li Porque el problema es importante
        li Necesario si es que uno quiere construir aplicaciones que requieran permisos a nivel de usuario
      li soluciones actuales
        li PKI
        li problemas de las mismas: alta probabilidad de falla. Riesgos ante recuperación de contraseñas
      li solución
        li building blocks
          li acuerdo bizantino
          li sistemas de reputación: sistema que asigna un valor de reputación a cada nodo según recomendaciones emitidas después de cada transacción.
          li anillos de confianza: se requiere también un sistema que permita armar sub-redes (anillos) con los nodos que posean una reputación > delta, de tal forma de generar una anillo de confianza.
          li La solución propuesta trabajara sobre este anillo de confianza. Ej: CORPS
        li protocolos
        li justificación del uso de los sistemas de confianza (comparación del sistema que no use esto)
      li conclusión: se comprueba la hipótesis gracias a los datos obtenidos
      li gráfico/tabla
      li trabajo futuro
        li sistemas de recuperación de contraseñas

/ problema
/section[data-background="#FF5C33"]
/ y Porque el problema es importante
section[data-background="#D5E2E8"]
  section#p2p
    h2 Redes P2P
    p Cada nodo actúa como cliente y servidor dentro de la red
    ul
      li Escalables
      li Descentralizada, no poseen un único punto de falla
      li Auto organizadas
      li Robustas, si un nodo falla otros pasan reemplazarlo
    img[src="img/p2p_img.png" height="200"]
  section#structured_p2p 
    /[data-background="img/p2p-structured.png"]
    h2 Redes P2P no estructuradas y estructuradas
    /img[src="img/p2p-unstructured.png" height="200"]
    img[src="img/Unstructured_peer-to-peer_network_diagram.png" height="300"]
    img[src="img/p2p-structured.png" height="300"]
    / TODO
  section#dht
    h2 DHT
    p Cada participante (nodo) se le asigna un node ID basado en su IP
    ul
      li La asignación de node IDs es aleatoria e uniforme, de tal forma que nodos de node ID adyacente se encuentran lejos geográficamente
    aside.notes
      ul
        li La búsqueda de información no sufre de falsos negativos
        li malos con búsquedas de rango
        li Problemas de seguridad; es complicado verificar la integridad de los datos almacenados
    p Ej: Chord, Pastry, CAN y Tapestry 
    img[src="img/DHT_en.svg" height="400"]
  section#pastry
    h2 Pastry
    p Cada participante (nodo) se le asigna un node ID basado en su IP
    ul
      li Consultas solo requieren O(log n) saltos
      li Los node IDs son 128-bit unsigned integers
      li Cada nodo guarda información sobre:
      ul
        li Leaf nodes
        li Neighborhood list
        li Routing table
    aside.notes
      ul
        li Leaf nodes (Los L/2 nodos más cercanos en ambas direcciones)
        li Routing table se divide en dígitos con b dígitos de largo
        li Routing table 2^b - 1 contactos por nivel
        li  b≈4,L≈2^b and M≈2^b 
    img[src="img/pastryrouting.png" height="200"]
  section#pastry_2
    h2 Pastry
    h4 Routing table
    aside.notes
      ul
        li Leaf nodes (Los L/2 nodos más cercanos en ambas direcciones)
        li Routing table se divide en dígitos con b dígitos de largo
        li Routing table 2^b - 1 contacts per level
        li  b≈4,L≈2^b and M≈2^b 
    img[src="img/pastry-routing-table.png" height="400"]
  section#problem
    h2 Problema
    ul
      li ¿Cómo identificar a los usuarios de una red P2P usando sólo nombre de usuario y contraseña?
      li ¿Cómo hacer el sistema lo más seguro posible?
    / TODO
    aside.notes
      ul
        li Las redes P2P sólo identifican a los nodos por su IP
    img[src="img/password.jpg" height="200"]

  section#why
    h2 ¿Por qué identificación de usuarios?
    ul
      li Necesario si es que uno quiere construir aplicaciones que requieran permisos a nivel de usuario
    img[src="img/users_connect.jpg" height="200"]

/li soluciones actuales
  li PKI
  li problemas de las mismas: alta probabilidad de falla. Riesgos ante recuperación de contraseñas
section[data-background="#F1F7B0"]
  section#current_solutiosn
    h2 Soluciones actuales
    ul
      li Registro de usuarios centralizado
      li Web of trust
      li Propuesta de PeerSoN
  section#public_private_keys
    aside.notes
      ul
        li Sólo el que posea la llave privada puede descifrar lo que la llave pública cifre, y vice-versa
        li Usado para identificar a los usuarios
    h2 Public-key cryptography 
    ul
      li Llaves basadas en un archivo Salt y la contraseña del usuario
    img[src="img/Public-key-crypto-1.svg" height="400"]
  section#pki
    aside.notes
      ul
        li Sistemas PGP sobre red requieren de que el usuario se preocupe de la mantención y seguridad de las llaves privadas de cada usuario
    h2 Web of trust
    ul
      li Misma idea de PGP (Pretty Good Privacy)
    img[src="img/PGP_diagram.png" height="600"]
    
    / TODO
  section#peerson
    aside.notes
      ul
        li propuesta de protocolos para identificación de usuarios
        / TODO
        li No considera nodos maliciosos en el sistema
        li Problemas de seguridad con sus protocolos de recuperación de contraseñas
        /li considerando alrededor de un 30% de nodos maliciosos en el sistema...
      
    h2 Peerson
    p Propuesta de protocolos para identificación de usuarios con usuario/contraseña
    img[src="img/p2p_password_peerson.png" height="500"]

/solución
 li building blocks
   li acuerdo bizantino
   li sistemas de reputación: sistema que asigna un valor de reputación a cada nodo según recomendaciones emitidas después de cada transacción.
   li anillos de confianza: se requiere también un sistema que permita armar sub-redes (anillos) con los nodos que posean una reputación > delta, de tal forma de generar una anillo de confianza.
     li La solución propuesta trabajara sobre este anillo de confianza. Ej: CORPS
section[data-background="#B2F7B0"]
  section#building_blocks
    /h2 Solución propuesta
    h2 Building blocks
    ul
      li DHT
      li Public-key cryptography / PGP
      li Consenso o votación
      /li Bizantine agreement
      li Sistemas de reputación
      /li Accountability systems
      li Anillos de confianza
      li Desafíos o puzzles computacionales
    aside.notes
      p Servicios son implementados haciendo uso de los nodos participantes de la red.
      p Por lo mismo, la fiabilidad de los servicios dependen de que tan correctos se comporten los nodos que son parte de ella.
      p To secure the system from Sybil attacks, we assume that the generation of the nodeIDs can be verified by any node in the network, for instance the bootstrapping node or the node with the closest nodeID.
  section#consenso
    aside.notes
      ul
        li Dentro de las redes p2p las responsabilidades son compartidas dentro de un grupo de nodos
    h2 Consenso o votación 
    /p Una falla Byzantina es una falla arbitraria ocurrida durante la ejecución de un algoritmo dentro de un sistema distribuído.
    ul
      li La votación debe asegurar la menor probabilidad de falla posible ante la mayor cantidad de nodos maliciosos que tolere la operación.
      li Para evitar problemas con nodos maliciosos, las respuestas son consideradas como válidas después de pasar por una votación o consenso
  section#consenso_2
    h2 Consenso o votación (2)
    ul
      li 
        | Considerando que la probabilidad de tener
        b  k
        |  nodos maliciosos en 
        b  L+1
        |  nodos es:
      img[src="img/p_n_nodos_maliciosos.png"]
      li 
        | La probabilidad de falla es más baja mientras más grande sea
        b  k
      li
        | El máximo valor posible de
        b  k
        |  para obtener mayoría en una votación corresponde a
        b  L/2
  section#reputation_systems
    aside.notes
      p Ej: WRT.
      ul
        li Asignan un valor a cada nodo dentro de la red tomando en cuenta las transacciones realizadas por cada uno
        li Este valor permite determinar que tan confiable es un nodo dentro de la red
    h2 Sistemas de reputación
    / TODO
    /p Assess the past history of a peer by gathering feedback from nodes with previous interactions with this peer.
    p Sistema que asigna un valor de reputación a cada nodo según recomendaciones emitidas después de cada transacción
    img[src="img/reputation_recommendation.png" height="400"]
  section#trusted_rings
    aside.notes
      ul
        li Ej: CORPS
        li Disminuye la probabilidad de falla de los protocolos en la red
        li Aún así, el sistema no logra llegar a acuerdos si más de 1/3 de sus nodos son maliciosos
    h2 Anillos de confianza
    ul
      li Gracias a los sistemas de reputación, se pueden armar anillos de nodos confiables
      li Estos anillos son un subset de los nodos participantes de la red P2P
    img[src="img/pring.png" height="400"]
  section#challenges
    aside.notes
      ul
        li aumentan el tiempo de procesamiento requerido para llevar a cabo una transacción específica
        li desincentivan ataques de fuerza bruta 
    h2 Desafíos o puzzles computacionales
    h3
      | (Proof-of-work system)
    / TODO
    img[src="img/Proof_of_Work_challenge_response.svg" height="300"]

section
  section#protocols
    h2 Protocolos
    ul
      /li Securing the nodes of a leafset
      li Account registration
      li User private key recovery
      li User sign in
      li Logout
      li Password Change
  /section#securing_nodes[data-background="img/secure_routing.png" data-background-size="600px"]
    h2 Securing the nodes of a leafset
    / TODO 
  section
    aside.notes
      ul
        li Explicar a grandes rasgos como funcionan todos los bloques en conjunto
        li Cada usuario posee un par de llaves públicas y privadas
        li Se usa el anillo de nodos confiables para realizar las transacciones necesarias para los protocolos del sistema de identificación de usuario
    h2 Nomenclatura
    ul
      li
        | Nodo
        b  A
      li
        | Servicio
        b  S
      li
        | Servicio Identificador del usuario 
        b  I
  section#sign_up
    aside.notes
      p Creación de llaves
    h2 Account registration (1)
    ul
      li 
        | Elegir nombre de 
        b  usuario
        |  y 
        b  contraseña 
      li
        b Derivar par de llaves
        |  usando un archivo
        b  salt 
        |  y la contraseña
    img[src="img/Public-key-crypto-1.svg" height="400"]

  section#sign_up_2
    aside.notes
      ul
        li ruteo
    h2 Account registration (2)
    ul
      li  
        | Obtener
        b  nodos I
        |  encargados del registro del
        b  usuario A
    img[src="img/secure_routing.png" height="500"]

  section#sign_up_3
    aside.notes
      ul
        li petición de registro
    h2 Account registration (3)
    ul
      li 
        b Petición
        |  de registro del usuario
      li
        b Proof of work
      li
        b Registro del usuario
        |  en los nodos I
    img{src="img/sign_up.png" height="500"}
  section#sign_up_4
    aside.notes
      ul
        li Guardar salt
    h2 Account registration (4)
    ul
      li 
        b Respuesta confirmación
        |  de registro
      li 
        b Respaldo
        |  del archivo
        b  salt
        |  del usuario (cifrado)
      ul
        li 
          | Cifrado de salt: Crypt(salt, SHA(password))
        li
          | Se almacena usando como llave: SHA(username)+SHA(password)
        li El sistema de almacenamiento usa replicación para mantener una alta disponibilidad de los datos.
      
  section#user_private_key_recovery
    aside.notes
      ul
        li El protocolo usa indirección para esconder la salt del usuario
        li No hay forma de recuperar las llaves del usuario si olvida su contraseña
        li Probablemente seria bueno hacer 
          | K = SHA(SHA(username)+SHA(password))
    h2 User private key recovery 
    ol
      li El nodo A busca los nodos responsables de almacenar la salt del usuario
      li 
        | Para ello hace:
        |  K = SHA(username)+SHA(password)
      li El nodo A recibe el archivo salt cifrado (esperando al menos L/2 + 1 respuestas afirmativas)
      li El nodo A descifra el archivo salt y procede a derivar la llave privada correspondiente su usuario (usando el archivo salt y su contraseña)
    ul 
      br
      li No hay forma de recuperar las llaves del usuario en caso de olvido de contraseña
  section#sign_in
    h2 User sign in (1)
    h4
      | (usuario ya tiene su llave privada)
    p 
      | El servicio
      b  S
      |  desea comprobar la identidad del nodo
      b  A
    br
    ul
      li
        b Servicio S
        |  envía un
        b  desafío (Proof of work)
        |  al
        b  nodo A
      li
        | El
        b  nodo A
        |  responde cifrando la solución con la 
        b  llave privada
        |  de su usuario 
    img{src="img/sign_in.png" height="300"}
  section#sign_in_2
    h2 User sign in (2)
    ul
      li
        | El servicio
        b  S consulta
        |  por el conjunto de nodos a cargo de la identificación del usuario (
        b nodos I
        | ) haciendo
        b
          |  K = SHA(username)
    img[src="img/secure_routing.png" height="500"]

  section#sign_in_3
    aside.notes
      p User sign in (Retrieve of public key)
    h2 User sign in (3)
    ul
      li 
        | El servicio
        b  S
        |  pide la
        b  llave pública
        |  del usuario a los
        b  nodos I
      li 
        | El 
        b  servicio S comprueba
        |  la identidad del usuario con la llave pública recibida
    img{src="img/sign_in_2.png" height="400"}
  section#sign_in_4
    aside.notes
      p User sign in (Generation of session keys)
    h2 User sign in (4)
    ul
      li
        | El 
        b  servicio S
        |  genera y envía una 
        b  llave de sesión
        |  para el nodo en caso de pasar la identificación como usuario 
    img{src="img/sign_in_3.png" height="400"}

  section#logout
    h2 Logout
    ul
      li Las sesiones son mantenidas por cada servicio
      li Un nodo puede enviar una petición de cierre de sesión al servicio
      li Las llaves de sesión son dadas por un tiempo determinado
      li Finalizado el tiempo, el usuario debe solicitar una  nueva llave de sesión al servicio
  section#password_change
    h2 Password Change
    ul
      li Similar al protocolo de registro de usuario
      li Los nodos I comprueban primero la identidad de la persona antes de actualizar las credenciales del usuario
      li Finalizada el registro de las nuevas llaves del usuario, se debe guardar la nueva salt del usuario de la misma forma mencionada anteriormente


section
  section#params
    aside.notes
      ul
        / TODO
        li 30% nodos maliciosos???
        li 0.5% de error de clasificación  (bibliografía) 
        li Tamaños del leafset fueron elegidos para tener un rango.. según lo mas usado en la bibliografía
        li Justificación del uso de los sistemas de confianza
    h2 Parámetros utilizados para la evaluación del sistema
    img[src="img/parameters.png"]
  section
    h3 Account registration (Probabilidades)
    img[src="img/p_register_account.png"]
  section
    h3 Account registration (Mensajes)
    img[src="img/m_register_account.png"]
  section
    h3 User private key recovery (Probabilidades)
    img[src="img/p_key_recovery.png"]
  section
    h3 User private key recovery (Mensajes)
    img[src="img/m_key_recovery.png"]
  section
    h3 User sign in (Probabilidades)
    img[src="img/p_sign_in.png"]
  section
    h3 User sign in (Mensajes)
    img[src="img/m_sign_in.png"]
  section
    h3 Logout (Probabilidades)
    img[src="img/p_logout.png"]
  section
    h3 Logout (Mensajes)
    img[src="img/m_logout.png"]
  section
    h3 Password Change (Probabilidades)
    img[src="img/p_change_password.png"]
  section
    h3 Password Change (Mensajes)
    img[src="img/m_change_password.png"]
section
  section#error_p_results
    aside.notes  se usa de caso base con acuerdo bizantino...
    h2 Resultados de la probabilidad de error
    
    table
      tr
        th Caso
        th Sin nodos confiables
        th Con nodos confiables
      tr
        td
          | Peor caso
          math
            |  (L = 8)
        td 0.188
        td
          math
            | 0.0000664
      tr
        td
          | Mejor caso
          math
            |  (L = 32)
        td 0.016
        td
          math
            | 8.24 &times; 10
            sup
              | -14
    br
    ul
      li
        | Sin nodos confiables,
        |  con p = 0.016,
        |  cada 1 millón de transacciones, 
        b  16000
        |  presentarían problemas.
      li
        | Con nodos confiables, 
        |  con p = 
        math
          |  8.24 &times; 10
          sup
            | -14

        |  cada 1 millón de transacciones, 
        b  0.00000000824
        |  presentarían problemas.

section
  section#conclusions
    aside.notes se comprueba la hipótesis gracias a los datos obtenidos (gráfico/tabla)
    h2 Conclusiones
    ul
      li No es 100% segura, pero viable.
      li
        | La probabilidad de error es del orden de 
        math
          | 10
          sup
            | -14
        |  con un leafset del tamaño de
        |  L = 32
      li El sistema se mantiene escalable
      li El uso de un sistema a reputación y administración de nodos confiables disminuye considerablemente la efectividad de los ataques de nodos maliciosos en la red
      li Un sistema a reputación también reduce la efectividad de ataques de colusión
      li Los desafíos computacionales limita la cantidad de usuarios que un nodo puede llegar a registrar en el sistema
  section#future_work
    aside.notes sistemas de recuperación de contraseñas
    h2 Trabajo futuro
    ul
      li Políticas de creación de contraseñas
      li Sistemas de recuperación de contraseñas
      li Bootstrapping del sistema (Cómo armar los primeros anillos de nodos confiables)
    
section#end
  h1 ¿Preguntas?
section
  section
    h3 Securing leafset (Probabilidades)
    img[src="img/p_securing_leafset.png"]
  section
    h3 Securing leafset (Mensajes)
    img[src="img/m_securing_leafset.png"]
